<?xml version="1.0" encoding="UTF-8"?>
<!--
                   Aozan development code

  This code may be freely distributed and modified under the
  terms of the GNU General Public License version 3 or later
  and CeCILL. This should be distributed with the code. If you
  do not have a copy, see:

       http://www.gnu.org/licenses/gpl-3.0-standalone.html
       http://www.cecill.info/licences/Licence_CeCILL_V2-en.html

  Copyright for this code is held jointly by the Genomic platform
  of the Institut de Biologie de l'École Normale Supérieure and
  the individual authors. These should be listed in @author doc
  comments.

  For more information on the Aozan project and its aims,
  or to join the Aozan Google group, visit the home page at:

       http://outils.genomique.biologie.ens.fr/aozan

-->
<document>

  <properties>
    <title>Demultiplexing</title>
    <author email="jourdren@biologie.ens.fr">Laurent Jourdren</author>
  </properties>



  <body>

   <section name="The demultiplexing step">

     <p><b>Warning:</b> The last version of bcl2fastq 2 (2.18) published in september 2016 is not currently supported by Aozan.
     However, we plan to support this version soon.</p>

     <p>This step allows to launch demultiplexing using bcl2fastq 2. Aozan can use samplesheets in XLS or XLSX format or generated
     by an external tool in addition of samplesheets in CSV format. Using a samplesheet in XLS or XLSX format allows
     to use aliases for adapter sequence indexes.
     <br/><a href="./samplesheet_bcl2fastq2_template.xls" target="_blank">Here is an example of a bcl2fastq samplesheet file.</a></p>

     <p>If not using an external tool to build the samplesheet, the samplesheet must be created
  in a dedicated directory using a standardized name (e.g. <tt>samplesheet_SNL177_0153.xls</tt> where SNL177 is the name of
     the sequencer provided by the run id, and 0153 is the run number. If no samplesheet file is provided in the dedicated directory,
     Aozan will use if it exists, the <tt>SampleSheet.csv</tt> file at the root of
     the run directory. The <tt>SampleSheet.csv</tt> file is created by the
     sequencer control software when the user provides a samplesheet at the run
     startup.</p>


   <p>Alongside Aozan, we provide a standalone Bcl2fastq samplesheet validator available on our website that allows you to check
   your run samplesheet and generate a valid CSV samplesheet file.
   The validator is available <a href="http://outils.genomique.biologie.ens.fr/designvalidator/" target="_blank">here.</a>
   </p>

     <h4>Configuration parameters</h4>

   <p>The following table contains the main parameters for this step.</p>

       <table>
       <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
       <tr><td>demux.step</td><td>boolean</td><td>True</td><td>Enable the step</td></tr>
       <tr><td>demux.space.factor</td><td>double</td><td>0.7</td><td>Factor to use to get the estimation of the amount of space needed
       in the fastq directory for the run based on the amount of space used in the bcl directory by the run data</td></tr>
       <tr><td>demux.use.hiseq.output</td><td>boolean</td><td>False</td><td>If it is true and no synchronization step is needed, the Hiseq output will directly be used for the demultiplexage step</td></tr>
       <tr><td>index.sequences</td><td>string</td><td>Not set</td><td>Path to a file containing aliases
       for adapter sequence indexes. <a href="./data/index-sequences.aliases" target="_blank">See an example.</a></td></tr>
       <tr><td>bcl2fastq.adapter.fasta.file.path</td><td>string</td><td>Not set</td><td>Adapter sequence file to use when bcl2fastq is launched</td></tr>
       <tr><td>bcl2fastq.samplesheet.format</td><td>string</td><td>xls</td><td>Bcl2fastq samplesheet format ("csv", "xls", "xlsx", or "command").</td></tr>
       <tr><td>bcl2fastq.samplesheet.prefix.filename</td><td>string</td><td>samplesheet</td><td>Prefix for Bcl2fastq samplesheet file <a href="./samplesheet_SNL110_template.xls" target="_blank">(example).</a></td></tr>
       <tr><td>bcl2fastq.samplesheet.generator.command</td><td>String</td><td>Not set</td><td>Command to execute to generate the Bcl2fastq samplesheet
  in CSV format when <b>bcl2fastq.samplesheet.format</b> the parameter is set to "command"</td></tr>
       <tr><td>bcl2fastq.samplesheet.path</td><td>string</td><td>Not set</td><td>Path to CSV/XLS/XLSX samplesheet files.</td></tr>
       <tr><td>bcl2fastq.mismatches</td><td>integer</td><td>0</td><td>Number of mismatches allowed in adapter indexes</td></tr>
       <tr><td>bcl2fastq.path</td><td>string</td><td>/usr/local/bcl2fastq</td><td>Path to Bcl2fastq basedir</td></tr>
       <tr><td>bcl2fastq.with.failed.reads</td><td>boolean</td><td>True</td><td>Add the reads that do not pass Illumina filter in the fastq files</td></tr>
       <tr><td>bcl2fastq.additionnal.arguments</td><td>string</td><td>Not set</td><td>Additional arguments for Bcl2fastq</td></tr>
       <tr><td>bcl2fastq.threads</td><td>integer</td><td>Number of computer cores</td><td>Number of threads to use for demultiplexing</td></tr>
     </table>

     <h4>Configuring Bcl2fastq barcode mismatches in the samplesheet</h4>

         <p>With Aozan, you can define the number of barcode mismatches to use
            with Bcl2fastq by adding a entry named <b>MismatchCount</b> in your
            <b>Settings</b> section of the samplesheet. This value will override
            the <tt>bcl2fastq.mismatches</tt> value set in the Aozan
            configuration file.</p>


     <h4>Configuration required to run bcl2fastq with Docker images.</h4>

   <p>This Aozan version can run Docker image for demultiplexing step. On our platform, we build a new image for each bcl2fastq new version.
    They can be downloaded from <a href="https://hub.docker.com/u/genomicpariscentre"> the genomic paris centre repository</a></p>

       <table>
       <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>Description</th></tr>
       <tr><td>bcl2fastq.use.docker</td><td>boolean</td><td>True</td><td>Enable to use Docker container to run bcl2fastq for demultiplexing.</td></tr>
       <tr><td>docker.uri</td><td>string</td><td>unix:///var/run/docker.sock</td><td>Docker deamon URI.</td></tr>
     </table>


        <p>An example of email sent at the end of demultiplexing step.</p>
       <div align="center">
           <img src="images/mail_demultiplexing.png" alt="example mail sent at the end of demultiplexing" border="1"/>
         </div>
   </section>
  </body>
</document>
