<?xml version="1.0" encoding="UTF-8"?>
<!-- 
/*
 *                  Aozan development code
 *
 * This code may be freely distributed and modified under the
 * terms of the GNU General Public License version 3 or later 
 * and CeCILL. This should be distributed with the code. If you 
 * do not have a copy, see:
 *
 *      http://www.gnu.org/licenses/gpl-3.0-standalone.html
 *      http://www.cecill.info/licences/Licence_CeCILL_V2-en.html
 *
 * Copyright for this code is held jointly by the Genomic platform
 * of the Institut de Biologie de l'École Normale Supérieure and
 * the individual authors. These should be listed in @author doc
 * comments.
 *
 * For more information on the Aozan project and its aims,
 * or to join the Aozan Google group, visit the home page at:
 *
 *      http://www.transcriptome.ens.fr/aozan
 *
 */
-->
<document>

	<properties>
		<title>Quickstart</title>
		<author email="jourdren@biologie.ens.fr">
			Laurent Jourdren
		</author>
		
	</properties>
		

	<body>
	        <link rel="alternate" type="application/rss+xml" title="Eoulsan updates" href="aozan.rss" />

		<section name="Quickstart Guide">
			<ul>
				<li>
					<a href="#introduction">Introduction</a>
				</li>
				<li>
					<a href="#principles">Principles</a>
				</li>
				<li>
					<a href="#requirements">Requirements</a>
				</li>
                                  <ul>
                                    <li><a href="#casava">Installing Casava</a></li>
                                    <li><a href="#bcl2fastq">Installing bcl2fastq</a></li>
                                  </ul>
                               <li>
					<a href="#installation">Installation</a>
				</li>
				<li>
					<a href="#launchingAozan">Launching Aozan</a>
				</li>
				<li>
					<a href="#hiseqdata">Accessing HiSeq Data</a>
				</li>
				<li>
					<a href="#directoryAozan">Directories requiered by Aozan</a>
				</li>
                <li>
                	<a href="#configuration">General configuration</a>
                </li>
                <li>
                	<a href="#steps">Steps</a>
                </li>
			</ul>
		
		</section>

		<a name="introduction"/>
		<section name="Introduction">

		  <p>Aozan is a tool that automatically handle Illumina HiSeq generated data from the end of sequencing to the 
		  demultiplexing and quality control. The great strength  of Aozan is to not require user to process data. 
		  </p>
		  <p>Each step of the post-sequencing data processing is quite easy to done. However 
		  the duration of the steps (data transfert, demultiplexing and quality control) is quite long and
		  users must watch the end of each step to avoid loose time before getting data ready to analysis.
		  Executing this tasks at the end of each sequencing is a quite off-putting job. Using Aozan allow to
		  save time by automate all this tasks. In addition Aozan provide a CASAVA CSV sample sheet generator
		  from an XLS file that avoid common syntax errors in the CSV file and allow usage of alias for the index 
		  sequences. This tool is access <a href="http://transcriptome.ens.fr/designvalidator">here</a>.
		  </p>
		</section>

		<a name="principles"/>
 <section name="Principles">
   
   <p>Aozan is not an interactive tool, it communicate with users through emails. It is launched regulary (usually every hour) 
   through a cron job. There are 6 steps in Aozan, once the end of a run has been discovered, synchronization, 
   demultiplexing and quality control will be automatically executed. However if the end of another run is 
   discovered at the end of this last 3 steps, the synchronization of the new run will be launched before resuming
   the end of the analysis of the previous run.</p>
   
   <p>The 6 steps of Aozan are:</p>
   <ul>
     <li><a href="first-base-report.html">First base report end step</a></li>
     <li><a href="end-run-discovering.html">End run discovering step</a></li>
     <li><a href="synchronization.html">Synchronization step</a></li>
     <li><a href="demultiplexing.html">Demultiplexing step</a></li>
     <li><a href="quality-control.html">Quality control step</a></li>
     <li><a href="contamination.html">Contamination detection step</a></li>
   </ul>
 </section>

 <a name="requirements"/>
 <section name="Requirements">


 <p>To run Aozan, you need to install the following software:</p>
 <ul>
   <li>Java 6 or above (tested with Oracle JRE and OpenJDK)</li>
   <li>Casava 1.8.2 or above, or bcl2fastq 1.8.3</li>
   <li>rsync 3.0.x or later</li>
 </ul>
 
 <p>On Ubuntu, you can install requirements (except CASAVA) with the following command:</p>
<source>
$ sudo apt-get install openjdk-6-jre-headless rsync
</source>
 
 <a name="casava"/>
 <subsection name="Installing CASAVA">

 <p>CASAVA can be downloaded on the Illumina website 
 <a href="http://support.illumina.com/sequencing/sequencing_software/casava/downloads.ilmn">here</a>.</p>

 <p>Next, we download and install CASAVA 1.8.2 with the following lines:</p>
 
 <source>
# Download CASAVA 1.8.2
$ wget https://my.illumina.com/download/summary/Wr-sNFYJn0GHBVp759vFtw

# Install runtime and compilation depenencies
$ sudo apt-get install alien cmake libboost-all-dev libxml2-dev libz-dev libbz2-dev libncurses5-dev libxml-simple-perl xsltproc gnuplot

# Launch compilation and installation
$ VERSION=1.8.2 &amp;&amp; \
  tar xjf CASAVA_v$VERSION.tar.bz2 &amp;&amp; \
  mkdir CASAVA_v$VERSION-build &amp;&amp; \
  cd CASAVA_v$VERSION-build &amp;&amp; \
  ../CASAVA_v$VERSION/src/configure \
    --prefix=/usr/local/casava-$VERSION \
    --with-cmake=/usr/bin/cmake &amp;&amp; \
  sudo make install

# Remove CASAVA examples (not mandatory, save lot of space on the system)
$ sudo rm -rf /usr/local/casava-$VERSION/share/CASAVA-$VERSION/examples 
</source>
   
 	<h4>Patching Casava to allow bzip2 compression of fastq files</h4>
    
    <p>To enable bzip2 compression in CASAVA 1.8, you need to comment with a '<tt>#</tt>' the next lines in
      the  <tt>/usr/local/casava/share/CASAVA-1.8.2/makefiles/Config.mk</tt>:</p>
<source>
COMPRESSION:=gzip
COMPRESSIONSUFFIX:=.gz
</source>    

  </subsection>
  
  <a name="bcl2fastq"/>
   <subsection name="Installing bcl2fastq">
   <p>The Bcl2FastQ conversion software is a new tool to handle bcl conversion and demultiplexing of both unzipped and zipped bcl files.
    bcl2fastq can be downloaded on the Illumina website 
 <a href="http://support.illumina.com/downloads/bcl2fastq_conversion_software_183.ilmn">here</a>.</p>

 <p>Next, we download and install bcl2fastq 1.8.3 with the following lines. The install on ubuntu has failed. 
   So we had to recompile bcl2fastq in static mode on Centos 5.9, before make final installing.
 <a href="http://centos.mirror.fr.planethoster.net/5/isos/x86_64/"> (download image iso here)</a></p>
 
 <source>
# Download bcl2fastq 1.8.3
$ wget support.illumina.com/documents/MyIllumina/ce203f99-aad6-449e-938c-daa7501089a4/bcl2fastq-1.8.3-Linux-x86_64.rpm

# Install runtime and compilation depenencies
$ yum install make perl libxml2-devel libxml2 libxslt libxslt-devel gcc gcc-c++ bzip2 bzip2-devel zlib zlib-devel

# Launch static compilation
$ tar -xjf bcl2fastq-1.8.3.tar.bz2
$ mkdir BclToFast-build
$ cd BclToFastq-build
$ ../BclToFastq/src/configure --static --prefix=/usr/local/bcl2fastq-1.8.3
$ make
$ su
$ make install

# Launch installation
$ tar -cvjf /usr/local/bcl2fastq-1.8.3.tar.bz2 bcl2fastq-1.8.3/
</source>
   
 
 
  <h4>Patching bcl2fastq to allow bzip2 compression of fastq files</h4>
    
    <p>To enable bzip2 compression in bcl2fastq 1.8.3, you need to comment with a '<tt>#</tt>' the next lines in
      the  <tt>/usr/local/bcl2fastq-1.8.3/share/bcl2fastq-1.8.3/makefiles/Config.mk</tt>:</p>
<source>
COMPRESSION:=gzip
COMPRESSIONSUFFIX:=.gz
</source>    

  </subsection>
   </section>
  
  
  <a name="installation"/>
  <section name="Installation">

 <p>The installation of Aozan is very easy, you just had to uncompress the archive:</p>

<source>
$ tar xzf aozan-@@@VERSION@@@.tar.gz
</source>

 <p>Aozan is written in Python and Java. It use the Java implementation of Python (Jython) that 
 is bundled in Aozan.</p>

  </section>
  
  <a name="launchingAozan"/>
  <section name="Launching Aozan">

 <p>Aozan is usually launched regulary as a cron job however Aozan can also be launched manually.
   In the following examples, Aozan is installed in <tt>/usr/local/aozan</tt> and the configuration file is 
     <tt>/etc/aozan.conf</tt>.
    Note that it is better to configure your aozan.conf file before running Aozan.</p>
    <p>The configuration file is a text file, the parameters correspond at key-value pairs. 
    See the pages for steps for more details.</p>

 <subsection name="Launching Aozan manually">

 <p>In this case, we can launch Aozan with the following command:</p>

<source>
$ /usr/local/aozan/aozan.sh /etc/aozan.conf
</source>

  </subsection>

 <a name="aozan_cron_job"/>
 <subsection name="Launching Aozan as cron job">

 <p>In the following lines, we configure our system to launch Aozan every hour using a script in
   <tt>/etc/cron.daily</tt> (on a Debian/Ubuntu GNU/Linux distribution).</p>

 <source>
#!/bin/bash

# User to use to launch Aozan
AOZAN_USER=nobody

# Path to Aozan base directory
AOZAN_DIR=/usr/local/aozan

# Path to Aozan data (not data processed by Aozan)
AOZAN_CONF=/etc/aozan.conf

su $AOZAN_USER -c "$AOZAN_DIR/aozan.sh $AOZAN_CONF"
</source>


 <p>Then we set the permission on the Aozan cron script:</p>

<source>
$ sudo chmod 755 /etc/cron/daily/aozan &amp;&amp; sudo chmod root:root /etc/cron/daily/aozan
</source>

  </subsection>
</section>

  <a name="hiseqdata"/>
 <section name="Accessing HiSeq Data">

 <p>Aozan can handle several HiSeq instruments. For each instruments you must allow Aozan computer 
 to access to HiSeq output directories. On HiSeq 2000, 2 hard drives are dedicated to each flow cell slot. 
   So you must sharing each hard drive with Aozan computer.</p>

 <subsection name="Enable sharing on HiSeq computer">
   
 <p>First on the HiSeq computer, share the hard drive that contains generated data (usualy F: and G:).
 To do this, open the explorer and right-click on each Hard drive, share... The shares can be in read 
   only mode (recommanded).</p>

 <p><b>Security issues:</b> we recommand to shares HiSeq output directories in read only mode and 
   restrict the shares access to Aozan computer. To do this, you can configure the Windows firewall.</p>

 </subsection>
   
 <subsection name="Mount Windows shares on linux">

 <ul>
   <li>First install the tools for mounting Windows shares (CIFS):</li>
<source>
$ sudo apt-get install cifs-utils smbclient
</source>

 <li>Then, test if you can connect to the share:</li>
<source>
$ smbclient -U sbsuser 'smb://hiseq01.example.com/F$'
</source>

 <li>And now you can add the following lines in /etc/fstab:</li>
<source>
//hiseq01.example.com/F$   /mnt/hiseq01_f    cifs    username=sbsuser,password=hiseqpassword       0       0
//hiseq01.example.com/G$   /mnt/hiseq01_g    cifs    username=sbsuser,password=hiseqpassword       0       0
</source>

 <li>Now create the mount points and process to mounting of the shares:</li>
<source>
$ sudo mkdir -p /mnt/hiseq01_f /mnt/hiseq01_g &amp;&amp; \
   sudo mount /mnt/hiseq01_f &amp;&amp; \
   sudo mount /mnt/hiseq01_g
</source>
 </ul>
 <p>You can also use autofs to mount the share.</p>

  </subsection>
</section>

<a name="directoryAozan"/>
 <section name="Directories requiered by Aozan">

 <p>To work, Aozan need the following directories. The path of this directories must be set in the Aozan
 configuration file.</p>
 <p>An example of aozan configuration file is <a href="./aozan-example.conf" target="_blank">here.</a></p>
 
 <table>
   <tr><th>Aozan property</th><th>Sample value</th><th>description</th></tr>
   <tr><td>aozan.var.path (*)</td><td>/var/lib/aozan</td><td>Aozan internal data directory. It contains 
     log files and history of processed runs.</td></tr>
   <tr><td>hiseq.data.path</td><td>/mnt/hiseq1,/mnt/hiseq2</td><td>Hiseq output directories. 
     Multplie values are allowed if there is several HiSeq or 2 output directories for each flow cell of 
     an HiSeq 2000.</td></tr>
   <tr><td>bcl.data.path</td><td>/mnt/storage/bcl</td><td>Hiseq output data after synchronization. Usualy cif files
     are not copied in this directory.</td></tr>
   <tr><td>fastq.data.path</td><td>/mnt/storage/fastq</td><td>Directory for the output of 
     demultiplexing with CASAVA or bcl2fastq.</td></tr>
   <tr><td>reports.data.path</td><td>/mnt/storage/reports</td><td>Directory for the qc report.</td></tr>
   <tr><td>casava.designs.path</td><td>/mnt/storage/casava_designs</td><td>Directory with CASAVA design (design_$runId.xls)
     for demultiplexing. If a custom script is used to generate CSV design files, this directory will no be used.</td></tr>
   <tr><td>tmp.path</td><td>/tmp</td><td>Temporary directory.</td></tr> 
 </table>

	<p>(*) In the directory specified in field aozan.var.path, you must create the following files. 
	Aozan allows to process several runs at the same time. At the end of a step, it adds the run id in the file. 
	The file corresponding on the next step allow to listing the runs to treated.
	The update is automatic :
		<ul>
			<il><p><b>first_base_report.done</b> : list of the run ids treated for the first base report step ;</p></il>
			<il><p><b>hiseq.done</b> : list of the run ids treated for the end run discovering step;</p></il>
			<il><p><b>hiseq.deny</b> : list of the run ids not to treat (in this file, manual entry) ;</p></il>
			<il><p><b>sync.done</b> : list of the run ids treated for the synchronization step ; </p></il>
			<il><p><b>demux.done</b> : list of the run ids treated for the demuliplexing step ; </p></il>
			<il><p><b>qc.done</b> : list of the run ids treated for the quality control step ; </p></il>
		</ul>
	</p>
	
</section>

  <a name="configuration"/>
 <section name="Aozan general configuration">

 <p>This section describe the Aozan global configuration settings. For the steps settings, 
 	see in the <a href="steps.html">steps documentation.</a></p>
 <p>An example of aozan configuration file is <a href="./aozan-example.conf" target="_blank">here.</a></p>
 
   <subsection name="General configuration">

     <table>
	   <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
	   <tr><td>aozan.enable</td><td>boolean</td><td>False</td><td>Enable Aozan</td></tr>
	   <tr><td>hiseq.sn</td><td>string</td><td>Not set</td><td>HiSeq serial number (not yet used)</td></tr>
	   <tr><td>lock.file</td><td>string</td><td>/var/lock/aozan.lock</td><td>Aozan lock file that prevent
	     two instances of Aozan running at the same time</td></tr>
	   <tr><td>index.html.template</td><td>string</td><td>Not set</td><td>HTML page template that 
	     describe a run. (deprecated)</td></tr>
	   <tr><td>reports.url</td><td>string</td><td>Not set</td><td>Run reports URL</td></tr>
	   <tr><td>hiseq.critical.min.space</td><td>integer</td><td>1099511627776</td><td>Threshold before sending 
	     a email at each Aozan start if not enough space is available on HiSeq output disk, the value corresponds 1 Tb in bytes.</td></tr>
	   
	 </table>
   
   </subsection>
   
   <subsection name="Mail configuration">
     
     <p>An email is the only mean for Aozan to inform users, this section show how to configure Aozan email sending.</p>
     
       <table>
	     <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
	     <tr><td>send.mail</td><td>boolean</td><td>False</td><td>Enable sending email</td></tr>
	     <tr><td>smtp.server</td><td>string</td><td>Not set</td><td>SMTP server address</td></tr>
	     <tr><td>mail.from</td><td>string</td><td>Not set</td><td>Email of the sender</td></tr>
	     <tr><td>mail.to</td><td>string</td><td>Not set</td><td>Email recipient</td></tr>
	     <tr><td>mail.header</td><td>string</td><td>THIS IS AN AUTOMATED MESSAGE.\n\n</td><td>Email header</td></tr>
	     <tr><td>mail.footer</td><td>string</td><td>\n\nThe Aozan team.\n</td><td>Email footer</td></tr>
       </table>

   </subsection>
   

   
 </section>
   
   <a name="steps"/>
 <section name="Steps">
 
 	<p>The quality control and the contamination detection steps are the longest, they can last several days. 
   If Aozan is stopped before the end, it is possible to relaunch him. Points restore allow get back at the last sample treated. 
   The intermediary data are saved in the quality control directory in files with the extension &quot;.data&quot;.
   </p>
   
   <ul>
     <li><a href="first-base-report.html">First base report end step</a></li>
     <li><a href="end-run-discovering.html">End run discovering step</a></li>
     <li><a href="synchronization.html">Synchronization step</a></li>
     <li><a href="demultiplexing.html">Demultiplexing step</a></li>
     <li><a href="quality-control.html">Quality control step</a></li>
     <li><a href="contamination.html">Contamination detection step</a></li>
   </ul>
   
   <p>An example of email sent to the end of Aozan with the quality control summary as attachment.</p>
   <div align="center">
   		<table><tr><th align="center"><img src="images/mail_end_qc.png" alt="" border="1"></img></th></tr></table>
   </div>
   
 </section>

	</body>
</document>
