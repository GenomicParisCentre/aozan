<?xml version="1.0" encoding="UTF-8"?>
<!-- 
/*
 *                  Eoulsan development code
 *
 * This code may be freely distributed and modified under the
 * terms of the GNU Lesser General Public License version 2.1 or
 * later and CeCILL-C. This should be distributed with the code.
 * If you do not have a copy, see:
 *
 *      http://www.gnu.org/licenses/lgpl-2.1.txt
 *      http://www.cecill.info/licences/Licence_CeCILL-C_V1-en.txt
 *
 * Copyright for this code is held jointly by the Genomic platform
 * of the Institut de Biologie de l'École Normale Supérieure and
 * the individual authors. These should be listed in @author doc
 * comments.
 *
 * For more information on the Eoulsan project and its aims,
 * or to join the Eoulsan Google group, visit the home page
 * at:
 *
 *      http://www.transcriptome.ens.fr/eoulsan
 *
 */
-->
<document>

	<properties>
		<title>Quickstart</title>
		<author email="jourdren@biologie.ens.fr">
			Laurent Jourdren
		</author>
		
	</properties>
		

	<body>
	        <link rel="alternate" type="application/rss+xml" title="Eoulsan updates" href="aozan.rss" />

		<section name="Introduction">

		  <p>Aozan is tool that automatically handle Illumina HiSeq generated data from the end of sequencing to the 
		  demultiplexing and quality control. The great strength  of Aozan is to not require user to process data. 
		  </p>
		  <p>Each step of the post-sequencing data processing is quite easy to done. However 
		  the duration of the steps (data transfert, demultiplexing and quality control) is quite long and
		  users must watch the end of each step to avoid loose time before getting data ready to analysis.
		  Executing this tasks at the end of each sequencing is a quite off-putting job. Using Aozan allow to
		  save time by automate all this tasks. In addition Aozan provide a CASAVA CSV sample sheet generator
		  from an XLS file that avoid common syntax errors in the CSV file and allow usage of alias for the index 
		  sequences.
		  </p>
		</section>

 <section name="Principles">
   
   <p>Aozan is not an interactive tool, it communicate with users through emails. It is launched regulary (usually every hour) 
   through a cron job. There are 5 steps in Aozan, once the end of a run has been discovered, synchronization, 
   demultiplexing and quality control will be automatically executed. However if the end of another run is 
   discovered at the end of this last 3 steps, the synchronization of the new run will be launched before resuming
   the end of the analysis of the previous run.</p>
   
   <p>The 5 steps of Aozan are:</p>
   <ul>
     <li>First base report sending</li>
     <li>End run discovering</li>
     <li>Synchronization</li>
     <li>Demultiplexing</li>
     <li>Quality control</li>
   </ul>  
   
 </section>

 <section name="Requierements">


 <p>To run Aozan, you need to install the following software:</p>
 <ul>
   <li>Java 6 or above (tested with Oracle JRE and OpenJDK)</li>
   <li>Casava 1.8.2 or above</li>
   <li>rsync 3.0.x or later</li>
 </ul>
 
 <p>On ubuntu, you can install requirements (except CASAVA) with the following command:</p>
 <pre>
$ sudo apt-get install openjdk-6-jre-headless rsync
 </pre>
  
 <subsection name="Installing CASAVA">

 <p>CASAVA can be downloaded on the Illumina website 
 <a href="http://support.illumina.com/sequencing/sequencing_software/casava/downloads.ilmn">here</a>.</p>

 <p>Next, we download and install CASAVA 1.8.2 with the following lines:</p>
 
 <pre>
# Download CASAVA 1.8.2
$ wget https://my.illumina.com/download/summary/Wr-sNFYJn0GHBVp759vFtw

# Install runtime and compilation depenencies
$ sudo apt-get install alien cmake libboost-all-dev libxml2-dev libz-dev libbz2-dev libncurses5-dev libxml-simple-perl xsltproc gnuplot

# Launch compilation and installation
$ VERSION=1.8.2 &amp;&amp; \
  tar xjf CASAVA_v$VERSION.tar.bz2 &amp;&amp; \
  mkdir CASAVA_v$VERSION-build &amp;&amp; \
  cd CASAVA_v$VERSION-build &amp;&amp; \
  ../CASAVA_v$VERSION/src/configure \
    --prefix=/usr/local/casava-$VERSION \
    --with-cmake=/usr/bin/cmake &amp;&amp; \
  sudo make install

# Remove CASAVA examples (not mandatory, save lot of space on the system)
$ sudo rm -rf /usr/local/casava-$VERSION/share/CASAVA-$VERSION/examples 
 </pre>
   
 </subsection>
 
  <subsection name="Patching Casava to allow bzip2 compression of fastq files">
    
    <p>To enable bzip2 compression in CASAVA 1.8, you need to comment with a '<tt>#</tt>' the next lines in
      the  <tt>/usr/local/casava/share/CASAVA-1.8.2/makefiles/Config.mk</tt>:</p>
<pre>
COMPRESSION:=gzip
COMPRESSIONSUFFIX:=.gz
</pre>    

  </subsection>
  
  </section>
  
  
  <section name="Installation">

 <p>The installation of Aozan is very easy, you just had to uncompress the archive:</p>

<pre>
$ tar xzf aozan-@@@VERSION@@@.tar.gz
</pre>

 <p>Aozan is written in Python and Java. It use the Java implementation of Python (Jython) that 
 is bundled in Aozan.</p>

  </section>
  <section name="Launching Aozan">

 <p>Aozan is usually launched regulary as a cron job however Aozan can also be launched manually.
   In the following examples, Aozan is installed in <tt>/usr/local/aozan</tt> and the configuration file is 
     <tt>/etc/aozan.conf</tt>.
    Note that it is better to configure your aozan.conf file before running Aozan.</p>

 <subsection name="Launching Aozan manually">

 <p>In this case, we can launch Aozan with the following command:</p>

<pre>
$ /usr/local/aozan/aozan.sh /etc/aozan.conf
</pre>

  </subsection>

 <subsection name="Launching aozan as cron job">

 <p>In the following lines, we configure our system to launch Aozan every hour using a script in
   <tt>/etc/cron.daily</tt> (on a Debian/Ubuntu GNU/Linux distribution).</p>

 <pre>
#!/bin/bash

# User to use to launch Aozan
AOZAN_USER=nobody

# Path to Aozan base directory
AOZAN_DIR=/usr/local/aozan

# Path to Aozan data (not data processed by Aozan)
AOZAN_CONF=/etc/aozan.conf

su $AOZAN_USER -c "$AOZAN_DIR/aozan.sh $AOZAN_CONF"
</pre>


 <p>Then we set the permission on the aozan cron script:</p>

<pre>
$ sudo chmod 755 /etc/cron/daily/aozan &amp;&amp; sudo chmod root:root /etc/cron/daily/aozan
</pre>

  </subsection>
</section>

 <section name="Accessing HiSeq Data">

 <p>Aozan can handle several HiSeq instruments. For each instruments you must allow Aozan computer 
 to access to HiSeq output directories. On HiSeq 2000, 2 hard drives are dedicated to each flow cell slot. 
   So you must sharing each hard drive with Aozan computer.</p>

 <subsection name="Enable sharing on HiSeq computer">
   
 <p>First on the HiSeq computer, share the hard drive that contains generated data (usualy F: and G:).
 To do this, open the explorer and right-click on each Hard drive, share... The shares can be in read 
   only mode (recommanded).</p>

 <p><b>Security issues:</b> we recommand to shares HiSeq output directories in read only mode and 
   restrict the shares access to Aozan computer. To do this, you can configure the Windows firewall.</p>

 </subsection>
   
 <subsection name="Mount Windows shares on linux">

 <ul>
   <li>First install the tools for mounting Windows shares (CIFS):</li>
   <pre>
$ sudo apt-get install cifs-utils smbclient
</pre>

 <li>Then, test if you can connect to the share:</li>
 <pre>
$ smbclient -U sbsuser 'smb://hiseq01.example.com/F$'
</pre>

 <li>And now you can add the following lines in /etc/fstab:</li>
 <pre>
//hiseq01.example.com/F$   /mnt/hiseq01_f    cifs    username=sbsuser,password=hiseqpassword       0       0
//hiseq01.example.com/G$   /mnt/hiseq01_g    cifs    username=sbsuser,password=hiseqpassword       0       0
</pre>

 <li>Now create the mount points and process to mounting of the shares:</li>
<pre>
$ sudo mkdir -p /mnt/hiseq01_f /mnt/hiseq01_g &amp;&amp; \
   sudo mount /mnt/hiseq01_f &amp;&amp; \
   sudo mount /mnt/hiseq01_g
</pre>

 <li>You can also use autofs to mount the share. TODO</li>
 </ul>
  </subsection>
</section>

 <section name="Directories requiered by Aozan">

 <p>To work, Aozan need the following directories. The path of this directories must be set in the Aozan
 configuration file.</p>
 
 <table>
   <tr><th>Aozan property</th><th>Sample value</th><th>description</th></tr>
   <tr><td>aozan.var.path</td><td>/var/lib/aozan</td><td>Aozan internal data directory. It contains 
     log files and history of processed runs.</td></tr>
   <tr><td>hiseq.data.path</td><td>/mnt/hiseq1,/mnt/hiseq2</td><td>Hiseq output directories. 
     Multplie values are allowed if there is several HiSeq or 2 output directories for each flow cell of 
     an HiSeq 2000.</td></tr>
   <tr><td>bcl.data.path</td><td>/mnt/storage/bcl</td><td>Hiseq output data after synchronization. Usualy cif files
     are not copied in this directory.</td></tr>
   <tr><td>fastq.data.path</td><td>/mnt/storage/fastq</td><td>Directory for the output of 
     demultiplexing with CASAVA.</td></tr>
   <tr><td>reports.data.path</td><td>/mnt/storage/reports</td><td>Directory for the output of 
     demultiplexing with CASAVA.</td></tr>
   <tr><td>casava.designs.path</td><td>/mnt/storage/casava_designs</td><td>Directory with CASAVA design (real name ???)
     for demultiplexing. If a custom script is used to generate CSV design files, this directory will no be used.</td></tr>
   <tr><td>tmp.path</td><td>/tmp</td><td>Temporary directory.</td></tr> 
 </table>

</section>

 <section name="Aozan configuration">

 <p>This section describe the Aozan global configuration settings. For the steps settings, see in the steps documentation.</p>
 
   <subsection name="General configuration">

     <table>
	   <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
	   <tr><td>aozan.enable</td><td>boolean</td><td>False</td><td>Enable Aozan</td></tr>
	   <tr><td>hiseq.sn</td><td>string</td><td>Not set</td><td>HiSeq serial number (used ???)</td></tr>
	   <tr><td>lock.file</td><td>string</td><td>/var/lock/aozan.lock</td><td>Aozan lock file that prevent
	     two instances of Aozan running at the same time</td></tr>
	   <tr><td>index.html.template</td><td>string</td><td>Not set</td><td>HTML page template that 
	     describe a run. (working ???)</td></tr>
	   <tr><td>reports.url</td><td>string</td><td>Not set</td><td>Run reports URL</td></tr>
	   <tr><td>hiseq.critical.min.space</td><td>integer</td><td>1099511627776</td><td>Threshold before sending 
	     a email at each Aozan start if not enough space is available on HiSeq output disk</td></tr>
	   <!-- tr>hiseq.critical.min.space<td></td><td>integer</td><td>3298534883328</td><td>Not used</td></tr-->
	 </table>
   
   </subsection>
   
   <subsection name="Mail configuration">
     
     <p>As email is the only mean for Aozan to inform users, this section show how to configure Aozan email sending.</p>
     
       <table>
	     <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
	     <tr><td>send.mail</td><td>boolean</td><td>False</td><td>Enable sending email</td></tr>
	     <tr><td>smtp.server</td><td>string</td><td>Not set</td><td>SMTP server address</td></tr>
	     <tr><td>mail.from</td><td>string</td><td>Not set</td><td>Email of the sender</td></tr>
	     <tr><td>mail.to</td><td>string</td><td>Not set</td><td>Email recipient</td></tr>
	     <tr><td>mail.header</td><td>string</td><td>THIS IS AN AUTOMATED MESSAGE.\n\n</td><td>Email header</td></tr>
	     <tr><td>mail.footer</td><td>string</td><td>\n\nThe Aozan team.\n</td><td>Email footer</td></tr>
       </table>

   </subsection>
   

   
 </section>
   
 <section name="Steps">

   <subsection name="First base report step">
     
     <p>This step check if a new run is currently running and if the first base report has been generated. 
     If true send an email with the first base report.</p>

     <h4>Configuration parameters</h4>
	 
	 <p>The next table contains the parameters of this step.</p>
	 
     <table>
	   <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
	   <tr><td>first.base.report.step</td><td>boolean</td><td>True</td><td>Enable the step</td></tr>
	 </table>
     
   </subsection>

   <subsection name="End run discovering step">
     
     <p>This step test if a run is completed by checking if a file called <tt>Basecalling_Netcopy_complete_ReadX.txt</tt> 
     exists in the root of the run output directory where X if the maximal read number of the run (e.g. for an indexed 
       paired end run, X is equals to 3). </p>
       
       <h4>Configuration parameters</h4>
	 
	 <p>The next table contains the parameters of this step.</p>
	 
     <table>
	   <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
	   <tr><td>hiseq.step</td><td>boolean</td><td>True</td><td>Enable the step</td></tr>
	   <!--tr><td>hiseq.step</td><td>integer</td><td>12</td><td>Set the maximal number of hour since the end of sequencing 
	     to send an email to inform users of the end of the run.</td></tr-->
     </table>
	 
       
     
   </subsection>
   
   <subsection name="Synchronization step">

    <p>This step copy output run files from the HiSeq computer to another place (usually a safe storage). 
    CIF files can be excluded from the copy.</p>
     
       <h4>Configuration parameters</h4>
	 
	 <p>The next table contains the parameters of this step.</p>
	 
     <table>
	   <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
	   <tr><td>sync.step</td><td>boolean</td><td>True</td><td>Enable the step</td></tr>
	   <tr><td>sync.space.factor</td><td>double</td><td>0.2</td><td>Factor to use to get the estimation of space needed 
	     in bcl directory for the run from the space used in hiSeq directory by the run</td></tr>
	   <tr><td>rsync.exclude.cif</td><td>boolean</td><td>True</td><td>Do not copy CIF files</td></tr>
     </table>
     
   </subsection>   
 
   <subsection name="Demultiplexing step">
     
     <p>This step allow to launch demultiplexing using CASVASA. Aozan can use samplesheet in XLS format or generated
     by an external tool in addition of samplesheet in CSV format. Using samplesheet in XLS format allow
     to use alias for adapters sequences indexes.</p>

      <h4>Configuration parameters</h4>
	 
	 <p>The next table contains the parameters of this step.</p>
	 
       <table>
	     <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
	     <tr><td>demux.step</td><td>boolean</td><td>True</td><td>Enable the step</td></tr>
	     <tr><td>demux.space.factor</td><td>double</td><td>0.7</td><td>Factor to use to get the estimation of space needed 
	     in fastq directory for the run from the space used in bcl directory by the run</td></tr>
	     <tr><td>index.sequences</td><td>string</td><td>Not set</td><td>Path to a file that contains alias 
	     for adapters sequences indexes</td></tr>
	     <tr><td>casava.adapter.fasta.file.path</td><td>string</td><td>Not set</td><td>Adapter sequence file to use when launch CASAVA</td></tr>
	     <tr><td>casava.compression</td><td>string</td><td>bzip2</td><td>Compression to use (gzip or bzip2)</td></tr>
	     <tr><td>casava.compression.level</td><td>integer</td><td>9</td><td>Compression level</td></tr>
	     <tr><td>casava.design.format</td><td>string</td><td>xls</td><td>CASAVA samplesheet format ("csv", "xls" or "command")</td></tr>
	     <tr><td>casava.design.generator.command</td><td>String</td><td>Not set</td><td>Command to execute to generate the CASAVA samplesheet 
  in CSV format when <b>casava.design.format</b> parameter is set to "command"</td></tr>
	     <tr><td>casava.designs.path</td><td>string</td><td>Not set</td><td>Path to CSV/XLS samplesheet files</td></tr>
	     <tr><td>casava.fastq.cluster.count</td><td>integer</td><td>0</td><td>Cluster number by fastq file. When set to 0 no limit 
  will be set</td></tr>
	     <tr><td>casava.mismatches</td><td>integer</td><td>0</td><td>Number of mismatches allowed in adapters indexes</td></tr>
	     <tr><td>casava.path</td><td>string</td><td>/usr/local/casava</td><td>Path to CASAVA basedir</td></tr>
	     <tr><td>casava.with.failed.reads</td><td>boolean</td><td>True</td><td>Add reads that not pass Illumina filter in fastq files</td></tr>   
	   </table>
     
   </subsection>
   
   <subsection name="Quality control step">
     
     <p>This step allow to perform some quality controls on the output of the runs. To do this Aozan use Illumina reports and 
     <a href="http://www.bioinformatics.babraham.ac.uk/projects/fastqc/">FastQC</a>. Aozan contains an additional FastQC 
     step named "<b>Bad tiles</b>" that search tiles with BMS issues with Illumina flowcell v3.</p>  

     <h4>Configuration parameters</h4>
     
     <p>The next table contains the globals parameters of this step.</p>

       <table>
         <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
         <tr><td>qc.report.save.raw.data</td><td>boolean</td><td>False</td><td>Save raw data generated for the tests</td></tr>
         <tr><td>qc.report.save.report.data</td><td>boolean</td><td>False</td><td>Save report data in XML format (before applying the stylesheet)</td></tr>
         <tr><td>qc.report.stylesheet</td><td>string</td><td>Not set</td><td>Path to the stylesheet to use </td></tr>
         <tr><td>qc.conf.fastqc.threads</td><td>integer</td><td>The number of core available on the system</td><td>The number of thread to use when running FastQC if
         tests that need FastQC are enable</td></tr>
       </table>
     
     <p>In addition to this parameters, user can add tests to perform in this steps. The order of the parameters in the Aozan configuration
     file will be reused in the report generated by this step.  Each test can use 
     several parameters and contains always an "<b>enable</b>" property to activate the test. Usually a property named "<b>interval</b>" exists 
     for each test, however if this property is not set, the value will be computed but not checked if it is the correct interval.
     You will find below all the parameters for all the available tests in Aozan:</p>
     
       <h5>Lanes quality tests</h5>
       <table>
         <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
         <tr><td>qc.test.rawclusters.enable</td><td>boolean</td><td>False</td><td>Enable rawcluster test</td></tr>
         <tr><td>qc.test.rawclusters.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values of rawcluster</td></tr>
         <tr><td>qc.test.pfclusters.enable</td><td>boolean</td><td>False</td><td>Enable pfcluster test</td></tr>
         <tr><td>qc.test.pfclusters.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values of pfclusters</td></tr>         
         <tr><td>qc.test.pfclusterspercent.enable</td><td>boolean</td><td>False</td><td>Enable pfclusterspercent test</td></tr>
         <tr><td>qc.test.pfclusterspercent.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of pfclusterspercent</td></tr>
         <tr><td>qc.test.clusterdensity.enable</td><td>boolean</td><td>False</td><td>Enable clusterdensity test</td></tr>
         <tr><td>qc.test.clusterdensity.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of clusterdensity</td></tr>
         <tr><td>qc.test.percentalign.enable</td><td>boolean</td><td>False</td><td>Enable percentalign test</td></tr>
         <tr><td>qc.test.percentalign.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of percentalign</td></tr>
         <tr><td>qc.test.errorrate.enable</td><td>boolean</td><td>False</td><td>Enable errorrate test</td></tr>
         <tr><td>qc.test.errorrate.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of errorrate</td></tr>
         <tr><td>qc.test.errorrate35cycle.enable</td><td>boolean</td><td>False</td><td>Enable errorrate35cycle test</td></tr>
         <tr><td>qc.test.errorrate35cycle.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of errorrate35cycle</td></tr>
         <tr><td>qc.test.errorrate75cycle.enable</td><td>boolean</td><td>False</td><td>Enable errorrate75cycle test</td></tr>
         <tr><td>qc.test.errorrate75cycle.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of errorrate75cycle</td></tr>
         <tr><td>qc.test.errorrate100cycle.enable</td><td>boolean</td><td>False</td><td>Enable errorrate100cycle test</td></tr>
         <tr><td>qc.test.errorrate100cycle.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of errorrate100cycle</td></tr>
         <tr><td>qc.test.firstcycleintensity.enable</td><td>boolean</td><td>False</td><td>Enable firstcycleintensity test</td></tr>
         <tr><td>qc.test.firstcycleintensity.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values of firstcycleintensity</td></tr>
         <tr><td>qc.test.percentintensitycycle20.enable</td><td>boolean</td><td>False</td><td>Enable percentintensitycycle20 test</td></tr>
         <tr><td>qc.test.percentintensitycycle20.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of percentintensitycycle20</td></tr>
         <tr><td>qc.test.phasingprephasing.enable</td><td>boolean</td><td>False</td><td>Enable phasingprephasing test</td></tr>
         <tr><td>qc.test.phasingprephasing.phasing.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of phasing</td></tr>
         <tr><td>qc.test.phasingprephasing.prephasing.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of prephasing</td></tr>
       </table>
       
       
       <h5>Sample quality tests</h5>
       <table>
         <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
         <tr><td>qc.test.rawclusterssamples.enable</td><td>boolean</td><td>False</td><td>Enable rawclusterssamples test</td></tr>
         <tr><td>qc.test.rawclusterssamples.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values of rawclusterssamples</td></tr>
         <tr><td>qc.test.pfclusterssamples.enable</td><td>boolean</td><td>False</td><td>Enable pfclusterssamples test</td></tr>
         <tr><td>qc.test.pfclusterssamples.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values of pfclusterssamples</td></tr>
         <tr><td>qc.test.percentpfsample.enable</td><td>boolean</td><td>False</td><td>Enable percentpfsample test</td></tr>
         <tr><td>qc.test.percentpfsample.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of percentpfsample</td></tr>                  
         <tr><td>qc.test.percentinlanesample.enable</td><td>boolean</td><td>False</td><td>Enable percentinlanesample test</td></tr>
         <tr><td>qc.test.percentinlanesample.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of percentinlanesample</td></tr>
         <tr><td>qc.test.percentq30.enable</td><td>boolean</td><td>False</td><td>Enable percentq30 test</td></tr>
         <tr><td>qc.test.percentq30.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of percentq30</td></tr>
         <tr><td>qc.test.meanqualityscorepf.enable</td><td>boolean</td><td>False</td><td>Enable meanqualityscorepf test</td></tr>
         <tr><td>qc.test.meanqualityscorepf.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of meanqualityscorepf</td></tr>     
         <tr><td>qc.test.basicstats.enable</td><td>boolean</td><td>False</td><td>Enable FastQC basicstats test</td></tr>
         <tr><td>qc.test.perbasequalityscores.enable</td><td>boolean</td><td>False</td><td>Enable FastQC perbasequalityscores test</td></tr>
         <tr><td>qc.test.persequencequalityscores.enable</td><td>boolean</td><td>False</td><td>Enable FastQC persequencequalityscores test</td></tr>
         <tr><td>qc.test.perbasesequencecontent.enable</td><td>boolean</td><td>False</td><td>Enable FastQC perbasesequencecontent test</td></tr>
         <tr><td>qc.test.perbasegccontent.enable</td><td>boolean</td><td>False</td><td>Enable FastQC perbasegccontent test</td></tr>
         <tr><td>qc.test.perSequencegccontent.enable</td><td>boolean</td><td>False</td><td>Enable FastQC perSequencegccontent test</td></tr>
         <tr><td>qc.test.ncontent.enable</td><td>boolean</td><td>False</td><td>Enable FastQC ncontent test</td></tr>
         <tr><td>qc.test.sequencelengthdistribution.enable</td><td>boolean</td><td>False</td><td>Enable FastQC sequencelengthdistribution test</td></tr>
         <tr><td>qc.test.duplicationlevel.enable</td><td>boolean</td><td>False</td><td>Enable FastQC duplicationlevel test</td></tr>
         <tr><td>qc.test.overrepresentedseqs.enable</td><td>boolean</td><td>False</td><td>Enable FastQC overrepresentedseqs test</td></tr>
         <tr><td>qc.test.kmercontent.enable</td><td>boolean</td><td>False</td><td>Enable FastQC kmercontent test</td></tr>
         <tr><td>qc.test.badtiles.enable</td><td>boolean</td><td>False</td><td>Enable FastQC badtiles test</td></tr>
    </table>
    
    <h5>Syntax of the interval value</h5>
    
    <p>User can define intervals as the next examples:</p>
    <ul>
      <li><b>[,10]</b> From - infinite to 10 (included)</li>
      <li><b>[,10[</b> From - infinite to 10 (excluded)</li>
       <li><b>[,10)</b> From - infinite to 10 (excluded)</li>
      <li><b>]2,10[</b> From 2 (excluded) to 10 (excluded)</li>
      <li><b>(2,10[</b> From 2 (excluded) to 10 (excluded)</li>
      <li><b>[2,10]</b> From 2 (included) to 10 (included)</li>
      <li><b>[2,]</b> From 2 (included) to + infinite</li>      
    </ul>      

   </subsection>  
   
 </section>

	</body>
</document>
