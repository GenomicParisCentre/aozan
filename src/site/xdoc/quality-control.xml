<?xml version="1.0" encoding="UTF-8"?>
<!-- 
/*
 *                  Aozan development code
 *
 * This code may be freely distributed and modified under the
 * terms of the GNU General Public License version 3 or later 
 * and CeCILL. This should be distributed with the code. If you 
 * do not have a copy, see:
 *
 *      http://www.gnu.org/licenses/gpl-3.0-standalone.html
 *      http://www.cecill.info/licences/Licence_CeCILL_V2-en.html
 *
 * Copyright for this code is held jointly by the Genomic platform
 * of the Institut de Biologie de l'École Normale Supérieure and
 * the individual authors. These should be listed in @author doc
 * comments.
 *
 * For more information on the Aozan project and its aims,
 * or to join the Aozan Google group, visit the home page at:
 *
 *      http://www.transcriptome.ens.fr/aozan
 *
 */
-->
<document>

	<properties>
		<title>Quality Control</title>
		<author email="jourdren@biologie.ens.fr">Laurent Jourdren</author>
	</properties>



	<body>
	
	<section name="Quality control step">
     
     <p>This step allow to perform some quality controls on the output of the runs. To do this Aozan use Illumina reports and 
     <a href="http://www.bioinformatics.babraham.ac.uk/projects/fastqc/">FastQC</a>. Aozan contains an additional FastQC 
     step named "<b>Bad tiles</b>" that search tiles with BMS issues with Illumina flowcell v3.</p>  

     <h4>Configuration parameters</h4>
     
     <p>The next table contains the globals parameters of this step.</p>

       <table>
         <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
         <tr><td>qc.report.save.raw.data</td><td>boolean</td><td>False</td><td>Save raw data generated for the tests</td></tr>
         <tr><td>qc.report.save.report.data</td><td>boolean</td><td>False</td><td>Save report data in XML format (before applying the stylesheet)</td></tr>
         <tr><td>qc.report.stylesheet</td><td>string</td><td>Not set</td><td>Path to the stylesheet to use </td></tr>
         <tr><td>qc.conf.fastqc.threads</td><td>integer</td><td>The number of core available on the system</td><td>The number of thread to use when running FastQC if
         tests that need FastQC are enable</td></tr>
       </table>
     
     <p>In addition to this parameters, user can add tests to perform in this steps. The order of the parameters in the Aozan configuration
     file will be reused in the report generated by this step.  Each test can use 
     several parameters and contains always an "<b>enable</b>" property to activate the test. Usually a property named "<b>interval</b>" exists 
     for each test, however if this property is not set, the value will be computed but not checked if it is the correct interval.
     You will find below all the parameters for all the available tests in Aozan:</p>
     
       <h5>Lanes quality tests</h5>
       <table>
         <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
         <tr><td>qc.test.rawclusters.enable</td><td>boolean</td><td>False</td><td>Enable rawcluster test</td></tr>
         <tr><td>qc.test.rawclusters.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values of rawcluster</td></tr>
         <tr><td>qc.test.pfclusters.enable</td><td>boolean</td><td>False</td><td>Enable pfcluster test</td></tr>
         <tr><td>qc.test.pfclusters.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values of pfclusters</td></tr>         
         <tr><td>qc.test.pfclusterspercent.enable</td><td>boolean</td><td>False</td><td>Enable pfclusterspercent test</td></tr>
         <tr><td>qc.test.pfclusterspercent.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of pfclusterspercent</td></tr>
         <tr><td>qc.test.clusterdensity.enable</td><td>boolean</td><td>False</td><td>Enable clusterdensity test</td></tr>
         <tr><td>qc.test.clusterdensity.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of clusterdensity</td></tr>
         <tr><td>qc.test.percentalign.enable</td><td>boolean</td><td>False</td><td>Enable percentalign test</td></tr>
         <tr><td>qc.test.percentalign.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of percentalign</td></tr>
         <tr><td>qc.test.errorrate.enable</td><td>boolean</td><td>False</td><td>Enable errorrate test</td></tr>
         <tr><td>qc.test.errorrate.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of errorrate</td></tr>
         <tr><td>qc.test.errorrate35cycle.enable</td><td>boolean</td><td>False</td><td>Enable errorrate35cycle test</td></tr>
         <tr><td>qc.test.errorrate35cycle.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of errorrate35cycle</td></tr>
         <tr><td>qc.test.errorrate75cycle.enable</td><td>boolean</td><td>False</td><td>Enable errorrate75cycle test</td></tr>
         <tr><td>qc.test.errorrate75cycle.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of errorrate75cycle</td></tr>
         <tr><td>qc.test.errorrate100cycle.enable</td><td>boolean</td><td>False</td><td>Enable errorrate100cycle test</td></tr>
         <tr><td>qc.test.errorrate100cycle.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of errorrate100cycle</td></tr>
         <tr><td>qc.test.firstcycleintensity.enable</td><td>boolean</td><td>False</td><td>Enable firstcycleintensity test</td></tr>
         <tr><td>qc.test.firstcycleintensity.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values of firstcycleintensity</td></tr>
         <tr><td>qc.test.percentintensitycycle20.enable</td><td>boolean</td><td>False</td><td>Enable percentintensitycycle20 test</td></tr>
         <tr><td>qc.test.percentintensitycycle20.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of percentintensitycycle20</td></tr>
         <tr><td>qc.test.phasingprephasing.enable</td><td>boolean</td><td>False</td><td>Enable phasingprephasing test</td></tr>
         <tr><td>qc.test.phasingprephasing.phasing.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of phasing</td></tr>
         <tr><td>qc.test.phasingprephasing.prephasing.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of prephasing</td></tr>
       </table>
       
       
       <h5>Sample quality tests</h5>
       <table>
         <tr><th>Aozan property</th><th>Type</th><th>Default value</th><th>description</th></tr>
         <tr><td>qc.test.rawclusterssamples.enable</td><td>boolean</td><td>False</td><td>Enable rawclusterssamples test</td></tr>
         <tr><td>qc.test.rawclusterssamples.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values of rawclusterssamples</td></tr>
         <tr><td>qc.test.pfclusterssamples.enable</td><td>boolean</td><td>False</td><td>Enable pfclusterssamples test</td></tr>
         <tr><td>qc.test.pfclusterssamples.interval</td><td>integer interval</td><td>False</td><td>Interval for valid values of pfclusterssamples</td></tr>
         <tr><td>qc.test.percentpfsample.enable</td><td>boolean</td><td>False</td><td>Enable percentpfsample test</td></tr>
         <tr><td>qc.test.percentpfsample.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of percentpfsample</td></tr>                  
         <tr><td>qc.test.percentinlanesample.enable</td><td>boolean</td><td>False</td><td>Enable percentinlanesample test</td></tr>
         <tr><td>qc.test.percentinlanesample.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of percentinlanesample</td></tr>
         <tr><td>qc.test.percentq30.enable</td><td>boolean</td><td>False</td><td>Enable percentq30 test</td></tr>
         <tr><td>qc.test.percentq30.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of percentq30</td></tr>
         <tr><td>qc.test.meanqualityscorepf.enable</td><td>boolean</td><td>False</td><td>Enable meanqualityscorepf test</td></tr>
         <tr><td>qc.test.meanqualityscorepf.interval</td><td>double interval</td><td>False</td><td>Interval for valid values of meanqualityscorepf</td></tr>     
         <tr><td>qc.test.basicstats.enable</td><td>boolean</td><td>False</td><td>Enable FastQC basicstats test</td></tr>
         <tr><td>qc.test.perbasequalityscores.enable</td><td>boolean</td><td>False</td><td>Enable FastQC perbasequalityscores test</td></tr>
         <tr><td>qc.test.persequencequalityscores.enable</td><td>boolean</td><td>False</td><td>Enable FastQC persequencequalityscores test</td></tr>
         <tr><td>qc.test.perbasesequencecontent.enable</td><td>boolean</td><td>False</td><td>Enable FastQC perbasesequencecontent test</td></tr>
         <tr><td>qc.test.perbasegccontent.enable</td><td>boolean</td><td>False</td><td>Enable FastQC perbasegccontent test</td></tr>
         <tr><td>qc.test.perSequencegccontent.enable</td><td>boolean</td><td>False</td><td>Enable FastQC perSequencegccontent test</td></tr>
         <tr><td>qc.test.ncontent.enable</td><td>boolean</td><td>False</td><td>Enable FastQC ncontent test</td></tr>
         <tr><td>qc.test.sequencelengthdistribution.enable</td><td>boolean</td><td>False</td><td>Enable FastQC sequencelengthdistribution test</td></tr>
         <tr><td>qc.test.duplicationlevel.enable</td><td>boolean</td><td>False</td><td>Enable FastQC duplicationlevel test</td></tr>
         <tr><td>qc.test.overrepresentedseqs.enable</td><td>boolean</td><td>False</td><td>Enable FastQC overrepresentedseqs test</td></tr>
         <tr><td>qc.test.kmercontent.enable</td><td>boolean</td><td>False</td><td>Enable FastQC kmercontent test</td></tr>
         <tr><td>qc.test.badtiles.enable</td><td>boolean</td><td>False</td><td>Enable FastQC badtiles test</td></tr>
    </table>
    
    <h5>Syntax of the interval value</h5>
    
    <p>User can define intervals as the next examples:</p>
    <ul>
      <li><b>[,10]</b> From - infinite to 10 (included)</li>
      <li><b>[,10[</b> From - infinite to 10 (excluded)</li>
      <li><b>[,10)</b> From - infinite to 10 (excluded)</li>
      <li><b>]2,10[</b> From 2 (excluded) to 10 (excluded)</li>
      <li><b>(2,10[</b> From 2 (excluded) to 10 (excluded)</li>
      <li><b>[2,10]</b> From 2 (included) to 10 (included)</li>
      <li><b>[2,]</b> From 2 (included) to + infinite</li>      
    </ul>      

   </section>  
   
	</body>

</document>